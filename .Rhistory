xlab(ptm$covariate) +
geom_ancova(m1) +
theme_pubr() +
NULL
gg
m1
predict(m1)
names(m1)
new_data <- data.table(
x = m1$xlevels,
predict = predict(m1),
fitted = m1$fitted.values
)
View(new_data)
m1$terms
names(m1)
m1$assign
m1$terms
new_data <- data.table(
x = fig2d$genotype,
predict = predict(m1),
fitted = m1$fitted.values
)
View(new_data)
fig2d[, yhat := predict(m1)]
is.data.table(fig2d)
data_from <- "data from"
data_folder <- "Inhibition of fatty acid oxidation enables heart regeneration in adult mice"
file_path <- here(data_from, data_folder, "Fig2d-proportion - Inhibition of fatty acid oxidation enables heart regeneration in adult mice.xlsx")
fig2d <- read_xlsx(file_path) |>
data.table()
model_dat <- create_model_data(
data = fig2d,
response_label = "fibrotic_area",
factor1_label = "genotype",
factor2_label = "factor2_label",
block_label = "block_label",
nest_label = "nest_label",
cov_label = "heart_area",
two_factors = FALSE,
include_block = FALSE,
include_nest = FALSE,
include_cov = TRUE
)
fig2d <- read_xlsx(file_path)
model_dat <- create_model_data(
data = fig2d,
response_label = "fibrotic_area",
factor1_label = "genotype",
factor2_label = "factor2_label",
block_label = "block_label",
nest_label = "nest_label",
cov_label = "heart_area",
two_factors = FALSE,
include_block = FALSE,
include_nest = FALSE,
include_cov = TRUE
)
fig2d <- read_xlsx(file_path) |>
data.table()
m1 <- lm(fibrotic_area ~ genotype + heart_area,
data = fig2d)
m1_emm <- emmeans(m1, specs = "genotype", type = "response")
m1_pairs <- contrast(m1_emm, method = "revpairwise") |>
summary(infer = TRUE)
fig2d[, yhat := predict(m1)]
View(fig2d)
fig2d[, yhat := predict(m1)]
ggplot(data = fig2d,
aes(x = heart_area,
y = fibrotic_area)) +
geom_line(y = yhat)
ggplot(data = fig2d,
aes(x = heart_area,
y = fibrotic_area)) +
geom_line(aes(y = yhat))
n <- 20
x1 <- rnorm(n); x2 <- rnorm(n)
y1 <- 2 * x1 + rnorm(n)
y2 <- 3 * x2 + (2 + rnorm(n))
A <- as.factor(rep(c(1, 2), each = n))
df <- data.frame(x = c(x1, x2), y = c(y1, y2), A = A)
fm <- lm(y ~ x + A, data = df)
p <- ggplot(data = cbind(df, pred = predict(fm)),
aes(x = x, y = y, color = A))
p + geom_point() + geom_line(aes(y = pred))
geom_ancova <- function(m1){
geom_smooth(method = "lm",
se = FALSE,
mapping = aes(y = predict(m1))
)
}
gg_data
gg <- ggplot(data = gg_data,
aes(x = get(ptm$covariate),
y = y,
color = plot_factor)) +
geom_point() +
ylab(y_label) +
xlab(ptm$covariate) +
geom_ancova(m1) +
theme_pubr() +
NULL
gg
m1 <- glm(fibrotic_area ~ genotype + offset(log(heart_area)),
family = Gamma(link = "log"),
data = fig2d)
m1_emm <- emmeans(m1, specs = "genotype", type = "response")
m1_pairs <- contrast(m1_emm, method = "revpairwise") |>
summary(infer = TRUE)
ptm <- get_ptm_parameters(m1, m1_pairs)
ptm$show_nest <- show_nest_data
if(!is.na(nest_id)){ptm$nest_id <- nest_id}
gg_data <- create_plot_data(m1, ptm)
gg_emm <- create_emm_data(m1_emm, ptm)
ptm$plot_factor_levels <- gg_emm[, plot_factor] |> as.character()
gg_pairs <- create_pairs_data(m1_pairs, hide_pairs, ptm)
if(!is.na(nest_id)){
gg_nest <- create_nest_data(m1, gg_data, ptm)
}else{
gg_nest <- NA
}
gg_pairs <- add_y_pos(gg_pairs, gg_data, gg_emm, gg_nest, ptm)
if(is.na(y_label)){y_label <- ptm$response_label}
gg <- ggplot(data = gg_data,
aes(x = get(ptm$covariate),
y = y,
color = plot_factor)) +
geom_point() +
ylab(y_label) +
xlab(ptm$covariate) +
geom_ancova(m1) +
theme_pubr() +
NULL
gg
m1
m1_emm
m1_pairs
geom_ancova <- function(m1){
geom_smooth(method = "lm",
se = FALSE,
mapping = aes(y = predict(m1, type = "response"))
)
}
gg <- ggplot(data = gg_data,
aes(x = get(ptm$covariate),
y = y,
color = plot_factor)) +
geom_point() +
ylab(y_label) +
xlab(ptm$covariate) +
geom_ancova(m1) +
theme_pubr() +
NULL
gg
m1 <- glm(fibrotic_area ~ genotype + log(heart_area),
family = Gamma(link = "log"),
data = fig2d)
m1_emm <- emmeans(m1, specs = "genotype", type = "response")
m1_pairs <- contrast(m1_emm, method = "revpairwise") |>
summary(infer = TRUE)
ptm <- get_ptm_parameters(m1, m1_pairs)
ptm$show_nest <- show_nest_data
if(!is.na(nest_id)){ptm$nest_id <- nest_id}
gg_data <- create_plot_data(m1, ptm)
gg_emm <- create_emm_data(m1_emm, ptm)
ptm$plot_factor_levels <- gg_emm[, plot_factor] |> as.character()
gg_pairs <- create_pairs_data(m1_pairs, hide_pairs, ptm)
if(!is.na(nest_id)){
gg_nest <- create_nest_data(m1, gg_data, ptm)
}else{
gg_nest <- NA
}
gg_pairs <- add_y_pos(gg_pairs, gg_data, gg_emm, gg_nest, ptm)
if(is.na(y_label)){y_label <- ptm$response_label}
gg <- ggplot(data = gg_data,
aes(x = get(ptm$covariate),
y = y,
color = plot_factor)) +
geom_point() +
ylab(y_label) +
xlab(ptm$covariate) +
geom_ancova(m1) +
theme_pubr() +
NULL
gg
ptm
gg <- ggplot(data = gg_data,
aes(x = get(ptm$covariate),
y = y,
color = plot_factor)) +
geom_point() +
ylab(ptm$response_label) +
xlab(ptm$covariate) +
geom_ancova(m1) +
theme_pubr() +
NULL
gg
m1 <- lm(log(fibrotic_area) ~ genotype + log(heart_area),
data = fig2d)
m1_emm <- emmeans(m1, specs = "genotype", type = "response")
m1_pairs <- contrast(m1_emm, method = "revpairwise") |>
summary(infer = TRUE)
gg <- ggplot(data = gg_data,
aes(x = get(ptm$covariate),
y = y,
color = plot_factor)) +
geom_point(size = 2) +
geom_ancova(m1)
# add some color
if(palette != "pal_ggplot"){
gg <- gg +
scale_color_manual(values = get(palette))
}
gg
m1 <- lm(fibrotic_area ~ genotype + log(heart_area),
data = fig2d)
m1_emm <- emmeans(m1, specs = "genotype", type = "response")
m1_pairs <- contrast(m1_emm, method = "revpairwise") |>
summary(infer = TRUE)
ptm <- get_ptm_parameters(m1, m1_pairs)
ptm$show_nest <- show_nest_data
if(!is.na(nest_id)){ptm$nest_id <- nest_id}
gg_data <- create_plot_data(m1, ptm)
gg_emm <- create_emm_data(m1_emm, ptm)
ptm$plot_factor_levels <- gg_emm[, plot_factor] |> as.character()
gg_pairs <- create_pairs_data(m1_pairs, hide_pairs, ptm)
if(!is.na(nest_id)){
gg_nest <- create_nest_data(m1, gg_data, ptm)
}else{
gg_nest <- NA
}
gg_pairs <- add_y_pos(gg_pairs, gg_data, gg_emm, gg_nest, ptm)
if(is.na(y_label)){y_label <- ptm$response_label}
gg <- ggplot(data = gg_data,
aes(x = get(ptm$covariate),
y = y,
color = plot_factor)) +
geom_point(size = 2) +
geom_ancova(m1)
# add some color
if(palette != "pal_ggplot"){
gg <- gg +
scale_color_manual(values = get(palette))
}
gg
gg <- gg +
stat_pvalue_manual(gg_pairs,
label = "p.print",
y.position = "y_pos",
# xmin = "minx",
# xmax = "maxx",
size = 4,
tip.length = 0.01)
m1 <- lm(log(fibrotic_area) ~ genotype + log(heart_area),
data = fig2d)
m1_emm <- emmeans(m1, specs = "genotype", type = "response")
m1_pairs <- contrast(m1_emm, method = "revpairwise") |>
summary(infer = TRUE)
plot_response(m1, m1_emm, m1_pairs)
gg
gg
gg <- ggplot(data = gg_data,
aes(x = get(ptm$covariate),
y = y,
color = plot_factor)) +
geom_point(size = 2) +
geom_ancova(m1)
# add some color
if(palette != "pal_ggplot"){
gg <- gg +
scale_color_manual(values = get(palette))
}
# add y-axis label
if(rescale != 1){
if(rescale > 1000){
rescale_str <- sci_to_10(rescale)
}else{
rescale_str <- as.character(rescale)
}
if(is.na(y_units)){
y_units <- paste0("X", rescale_str)
}else{
y_units <- paste0("X", rescale_str, " ", y_units)
}
}
# if % is in label then
if(any(str_detect(y_label, "%"))){
gg <- gg + ylab(y_label)
}else{
y_label <- str_replace(y_label, " ", "~")
y_units <- str_replace(y_units, " ", "~")
if(is.na(y_units)){
gg <- gg +
ylab(bquote(.(rlang::parse_expr(paste(y_label)))))
}else{
gg <- gg +
ylab(bquote(.(rlang::parse_expr(paste(y_label)))
~(.(rlang::parse_expr(paste(y_units))))))
}
}
# add theme
gg <- gg + theme_pubr(base_size = font_size) +
theme(axis.title.x = element_blank())
gg
ptm <- get_ptm_parameters(m1, m1_pairs)
ptm$show_nest <- show_nest_data
if(!is.na(nest_id)){ptm$nest_id <- nest_id}
gg_data <- create_plot_data(m1, ptm)
gg_emm <- create_emm_data(m1_emm, ptm)
ptm$plot_factor_levels <- gg_emm[, plot_factor] |> as.character()
gg_pairs <- create_pairs_data(m1_pairs, hide_pairs, ptm)
if(!is.na(nest_id)){
gg_nest <- create_nest_data(m1, gg_data, ptm)
}else{
gg_nest <- NA
}
gg_pairs <- add_y_pos(gg_pairs, gg_data, gg_emm, gg_nest, ptm)
if(is.na(y_label)){y_label <- ptm$response_label}
gg <- ggplot(data = gg_data,
aes(x = get(ptm$covariate),
y = y,
color = plot_factor)) +
geom_point(size = 2) +
geom_ancova(m1)
# add some color
if(palette != "pal_ggplot"){
gg <- gg +
scale_color_manual(values = get(palette))
}
# add p-value brackets
# gg <- gg +
#   stat_pvalue_manual(gg_pairs,
#                      label = "p.print",
#                      y.position = "y_pos",
#                      # xmin = "minx",
#                      # xmax = "maxx",
#                      size = 4,
#                      tip.length = 0.01)
# add y-axis label
if(rescale != 1){
if(rescale > 1000){
rescale_str <- sci_to_10(rescale)
}else{
rescale_str <- as.character(rescale)
}
if(is.na(y_units)){
y_units <- paste0("X", rescale_str)
}else{
y_units <- paste0("X", rescale_str, " ", y_units)
}
}
# if % is in label then
if(any(str_detect(y_label, "%"))){
gg <- gg + ylab(y_label)
}else{
y_label <- str_replace(y_label, " ", "~")
y_units <- str_replace(y_units, " ", "~")
if(is.na(y_units)){
gg <- gg +
ylab(bquote(.(rlang::parse_expr(paste(y_label)))))
}else{
gg <- gg +
ylab(bquote(.(rlang::parse_expr(paste(y_label)))
~(.(rlang::parse_expr(paste(y_units))))))
}
}
# add theme
gg <- gg + theme_pubr(base_size = font_size) +
theme(axis.title.x = element_blank())
gg
gg
gg <- ggplot(data = gg_data,
aes(x = get(ptm$covariate),
y = y,
color = plot_factor)) +
geom_point(size = 2) +
geom_ancova(m1)
gg
m1 <- lm(fibrotic_area ~ genotype + log(heart_area),
data = fig2d)
m1_emm <- emmeans(m1, specs = "genotype", type = "response")
m1_pairs <- contrast(m1_emm, method = "revpairwise") |>
summary(infer = TRUE)
ptm <- get_ptm_parameters(m1, m1_pairs)
ptm$show_nest <- show_nest_data
if(!is.na(nest_id)){ptm$nest_id <- nest_id}
gg_data <- create_plot_data(m1, ptm)
gg_emm <- create_emm_data(m1_emm, ptm)
ptm$plot_factor_levels <- gg_emm[, plot_factor] |> as.character()
gg_pairs <- create_pairs_data(m1_pairs, hide_pairs, ptm)
if(!is.na(nest_id)){
gg_nest <- create_nest_data(m1, gg_data, ptm)
}else{
gg_nest <- NA
}
gg_pairs <- add_y_pos(gg_pairs, gg_data, gg_emm, gg_nest, ptm)
if(is.na(y_label)){y_label <- ptm$response_label}
gg <- ggplot(data = gg_data,
aes(x = get(ptm$covariate),
y = y,
color = plot_factor)) +
geom_point(size = 2) +
geom_ancova(m1)
# add some color
if(palette != "pal_ggplot"){
gg <- gg +
scale_color_manual(values = get(palette))
}
gg
# add y-axis label
if(rescale != 1){
if(rescale > 1000){
rescale_str <- sci_to_10(rescale)
}else{
rescale_str <- as.character(rescale)
}
if(is.na(y_units)){
y_units <- paste0("X", rescale_str)
}else{
y_units <- paste0("X", rescale_str, " ", y_units)
}
}
# if % is in label then
if(any(str_detect(y_label, "%"))){
gg <- gg + ylab(y_label)
}else{
y_label <- str_replace(y_label, " ", "~")
y_units <- str_replace(y_units, " ", "~")
if(is.na(y_units)){
gg <- gg +
ylab(bquote(.(rlang::parse_expr(paste(y_label)))))
}else{
gg <- gg +
ylab(bquote(.(rlang::parse_expr(paste(y_label)))
~(.(rlang::parse_expr(paste(y_units))))))
}
}
# add theme
gg <- gg + theme_pubr(base_size = font_size) +
theme(axis.title.x = element_blank())
g
gg
ptm <- get_ptm_parameters(m1, m1_pairs)
ptm$show_nest <- show_nest_data
if(!is.na(nest_id)){ptm$nest_id <- nest_id}
gg_data <- create_plot_data(m1, ptm)
gg_emm <- create_emm_data(m1_emm, ptm)
ptm$plot_factor_levels <- gg_emm[, plot_factor] |> as.character()
gg_pairs <- create_pairs_data(m1_pairs, hide_pairs, ptm)
if(!is.na(nest_id)){
gg_nest <- create_nest_data(m1, gg_data, ptm)
}else{
gg_nest <- NA
}
gg_pairs <- add_y_pos(gg_pairs, gg_data, gg_emm, gg_nest, ptm)
if(is.na(y_label)){y_label <- ptm$response_label}
gg <- ggplot(data = gg_data,
aes(x = get(ptm$covariate),
y = y,
color = plot_factor)) +
geom_point(size = 2) +
geom_ancova(m1)
# add some color
if(palette != "pal_ggplot"){
gg <- gg +
scale_color_manual(values = get(palette))
}
# add p-value brackets
# gg <- gg +
#   stat_pvalue_manual(gg_pairs,
#                      label = "p.print",
#                      y.position = "y_pos",
#                      # xmin = "minx",
#                      # xmax = "maxx",
#                      size = 4,
#                      tip.length = 0.01)
# add y-axis label
if(rescale != 1){
if(rescale > 1000){
rescale_str <- sci_to_10(rescale)
}else{
rescale_str <- as.character(rescale)
}
if(is.na(y_units)){
y_units <- paste0("X", rescale_str)
}else{
y_units <- paste0("X", rescale_str, " ", y_units)
}
}
# if % is in label then
if(any(str_detect(y_label, "%"))){
gg <- gg + ylab(y_label)
}else{
y_label <- str_replace(y_label, " ", "~")
y_units <- str_replace(y_units, " ", "~")
if(is.na(y_units)){
gg <- gg +
ylab(bquote(.(rlang::parse_expr(paste(y_label)))))
}else{
gg <- gg +
ylab(bquote(.(rlang::parse_expr(paste(y_label)))
~(.(rlang::parse_expr(paste(y_units))))))
}
}
# add theme
gg <- gg + theme_pubr(base_size = font_size)
gg
# add x-axis label
gg <- gg +
xlab(ptm$covariate)
gg
